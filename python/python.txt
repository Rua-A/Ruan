-- 쉬프트 연산자 --
*와 /를 대체 하는 연산자 - 비트를 이동시켜
4bit일 경우 비트를 밀어 1234 -> 2345로 , 1234 -> 3456 , 1234 -> 0123 , 1234 -> -1012
컴퓨터는 acc 누산기처리만 가능 
<<, >>     5*4 = 5<<2   20/4 = 20>>2
모든 곱하기 나누기는 쉬프트 연산자로 표현이 가능하다.

-- 복합 대입 연산자 --
x = x + y , x = x - y , x = x * y , x = x / y
x += y    , x -= y    , x *= y    , x /= y
>누적으로 x값에 y값을 더하는 것
>누적으로 x값에 y값을 빼는 것
>누적으로 x값에 y값을 곱하는 것
>누적으로 x값에 y값을 나누는 것

-- 비트 연산자 --
mask 연산자

-- 연산자 우선순위 --
(), 연산자끼리의 우선순위가 존재
> 단항연산자 
> 이항연산자
>> 솔 로 우대정책
1.괄호 2.단항연산자. not X, ~y 
3.이항연산자 - 산술연산자 쉬프트연산자 비교연산자 비트연산자 논리연산자 
4.대입연산자

-- LIST --
리스트 list - 배열과 흡사하지만 다르다 - 여러개의 자료를 저장하기 위해서 사용한다 - 기능과 특징이 많다
자료형을 제한받지 않고 원하는 대로 가능하다.
.append() 뒤에 원소 붙이기
.sort() 정령
.reverse() 역정렬 
.index() 문자가 몇개있는지 확인
.insert() 지정한 문자를 넣고 싶은 자리에 넣기
.remove() 지정한 자리의 값 지우기
.pop() 가장 끝 원소 꺼내기, List에서의 끝에값은 없어진다.
.count() 
.extend()


string.upper 모두 대문자로
string.capitalize() 맨앞 글자만 대문자로
string.title() 단어의 앞단어를 모두 대문자로
string.lower 모두 소문자로
string.isupper 모두 대문자인지 확인 True False
strint.islower 모두 소문자인지 확인 True False